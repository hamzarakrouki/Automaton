/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MAChamza
 */
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import javax.swing.*;
import java.awt.*;
import javax.imageio.*;
public class interfaceExpreg extends javax.swing.JFrame {
        static int k=0;
        Automaton b;
        boolean test;
        ArrayList<ArrayList<ArrayList<Integer>>> groupe1=new ArrayList<ArrayList<ArrayList<Integer>>>();
        ArrayList<ArrayList<ArrayList<Integer>>> groupe2=new ArrayList<ArrayList<ArrayList<Integer>>>();
        ArrayList<ArrayList<ArrayList<Integer>>> MatTrans1 = new ArrayList<ArrayList<ArrayList<Integer>>>();
        ArrayList<ArrayList<ArrayList<Integer>>> MatTrans2 = new ArrayList<ArrayList<ArrayList<Integer>>>();
        String alphabet1 =new String();
         String alphabet2 =new String();
        String s1=new String();
        String s2=new String();
        
        ArrayList<Integer> accept1 =new ArrayList<Integer>();
        ArrayList<Integer> accept2 =new ArrayList<Integer>();
        
        /**
         * Creates new form interfaceExpreg
         */
        public interfaceExpreg() {
                initComponents();
                this.b=new Automaton();
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {

                jTextField1 = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jButton1 = new javax.swing.JButton();
               
                jButton2 = new javax.swing.JButton();
                jButton3 = new javax.swing.JButton();
                jButton4 = new javax.swing.JButton();
                jLabel3 = new javax.swing.JLabel();
                jLabel4 = new javax.swing.JLabel();
                jTextField3 = new javax.swing.JTextField();
                jLabel6 = new javax.swing.JLabel();
                jLabel7 = new javax.swing.JLabel();
                jTextField4 = new javax.swing.JTextField();
                jLabel8 = new javax.swing.JLabel();
                jTextField5 = new javax.swing.JTextField();
                jTextField6 = new javax.swing.JTextField();
                jTextField7 = new javax.swing.JTextField();
                jLabel9 = new javax.swing.JLabel();
                jLabel10 = new javax.swing.JLabel();
                jLabel11 = new javax.swing.JLabel();
                jButton5 = new javax.swing.JButton();
                jButton6 = new javax.swing.JButton();
                jLabel12 = new javax.swing.JLabel();
                jRadioButton1 = new javax.swing.JRadioButton();
                jRadioButton2 = new javax.swing.JRadioButton();
                jButton7 = new javax.swing.JButton();
                jButton8 = new javax.swing.JButton();
                jButton9 = new javax.swing.JButton();
                jButton10 = new javax.swing.JButton();
                jLabel5 = new javax.swing.JLabel();
                jTextField2 = new javax.swing.JTextField();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                jTextField1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField1ActionPerformed(evt);
                        }
                });

                jLabel1.setText("                ****Bienvenue*****           ");

                jLabel2.setText("donner une expression reguliere");

                jButton1.setText("Graphe epsilon");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton1ActionPerformed(evt);
                        }
                });

                jButton2.setText("Graphe optimal");
                jButton2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton2ActionPerformed(evt);
                        }
                });
                jButton10.setText("testegalite");
                jButton10.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton10ActionPerformed(evt);
                        }
                });

                jButton3.setText("OK");
                jButton3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton3ActionPerformed(evt);
                        }
                });

                jButton4.setText("Graphe deterministe non optimal");
                jButton4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton4ActionPerformed(evt);
                        }
                });

                jLabel3.setText("2éme Automate");

                jLabel4.setText("1ér Automate");

                jTextField3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField3ActionPerformed(evt);
                        }
                });

                jLabel6.setText("les alphabets:");

                jLabel7.setText("l'etat initial:");

                jTextField4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField4ActionPerformed(evt);
                        }
                });

                jLabel8.setText("Les Transitions");

                jTextField5.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField5ActionPerformed(evt);
                        }
                });

                jTextField6.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField6ActionPerformed(evt);
                        }
                });

                jTextField7.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField7ActionPerformed(evt);
                        }
                });

                jLabel9.setText("etat i");

                jLabel10.setText("alphabet");

                jLabel11.setText("etat j");

                jButton5.setText("Valider");
                jButton5.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton5ActionPerformed(evt);
                        }
                });

                jButton6.setText("Ajouter l'etat");
                jButton6.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton6ActionPerformed(evt);
                        }
                });

                jRadioButton1.setText("accepteur");
                jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jRadioButton1ActionPerformed(evt);
                        }
                });

                jRadioButton2.setText("accepteur");
                jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jRadioButton2ActionPerformed(evt);
                        }
                });

                jButton7.setText("Graphe deterministe non optimal 2");
                jButton7.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton7ActionPerformed(evt);
                        }
                });

                jButton8.setText("Graphe optimal 2");
                jButton8.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton8ActionPerformed(evt);
                        }
                });

                jButton9.setText("Graphe automate 2");
                jButton9.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton9ActionPerformed(evt);
                        }
                });

                jTextField2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField2ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(173, 173, 173)
                              
                                )
                              
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(64, 64, 64)
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                
                                                .addComponent(jButton1)
                                                .addComponent(jButton10)

                                                .addGap(57, 57, 57)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(275, 275, 275)
                                                .addComponent(jButton5)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGap(12, 12, 12)
                                                        
                                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(25, 25, 25)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(17, 17, 17)
                                                        .addComponent(jLabel6)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(23, 23, 23)
                                                        .addComponent(jLabel7)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(76, 76, 76)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jRadioButton1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jButton6)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel9)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(102, 102, 102)
                                                                                .addComponent(jLabel10)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel11)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jRadioButton2)
                                                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel5)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(222, 222, 222)
                                                                .addComponent(jTextField2)))
                                                .addGap(34, 34, 34))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(133, 133, 133))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(57, 57, 57)
                                                .addComponent(jButton9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton8)
                                                .addGap(257, 257, 257))))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                )
                                               
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(6, 6, 6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jButton3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton4)
                                                        .addComponent(jButton1)
                                                        .addComponent(jButton10)
                                                        .addComponent(jButton2))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel3)
                                                                .addGap(52, 52, 52)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel6))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel7)
                                                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel12))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(52, 52, 52)
                                                                .addComponent(jLabel8)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel9)
                                                                        .addComponent(jLabel10)
                                                                        .addComponent(jLabel11))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jRadioButton2)
                                                                        .addComponent(jRadioButton1))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel5))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jButton6)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton5))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton7)
                                        .addComponent(jButton8)
                                        .addComponent(jButton9))
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>                        

        private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","epsilon.dot");
                     builder.redirectOutput(new File("epsilon.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "epsilon.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }
        }                                        

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                        try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","optimal.dot");
                     builder.redirectOutput(new File("optimal.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "optimal.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }
        }                                        

        private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    int i = 0, j = 0;
                boolean test = false;
                ExpReg exp = new ExpReg(jTextField1.getText());
                                
                             
                                if (exp.verif() == false){
                                JOptionPane.showMessageDialog(this,"erreur à l'expression reguliére");
                            
                                }
                                else {
                                        JOptionPane.showMessageDialog(this,"les Graphes son dessinés avec succes");
                                        String alphabet = exp.getalphabet();
                                        String s = new ExpReg(exp.post1()).post2(); 
                                        s = new InToPost(s).doTrans();
                                        
                                        Automaton a = new Automaton();
                                        a = a.FinalAutomatom(s);
                                        ArrayList<Integer> tabAccept = new ArrayList<Integer>();
                                        tabAccept = a.dump(null, a.initial.id, null);
                                        a.dessine(null, a.initial.id, null);

                                        ArrayList<ArrayList<Integer>> det = new ArrayList<ArrayList<Integer>>();

                                        ArrayList<Integer> temp = new ArrayList<Integer>();
                                        temp = a.firstlist();
                                     

                                        det.add(temp);
                                        this.alphabet1=alphabet;
                                        for (i = 0; i < alphabet.length(); i++) {
                                                det.add(a.transition_list(alphabet.charAt(i), temp));

                                        }
                                        ArrayList<ArrayList<Integer>> temp1 = new ArrayList<ArrayList<Integer>>();
                                        ArrayList<ArrayList<Integer>> temp4 = new ArrayList<ArrayList<Integer>>();
                                        ArrayList<ArrayList<ArrayList<Integer>>> MatTrans = new ArrayList<ArrayList<ArrayList<Integer>>>();
                                        MatTrans.add(det);

                                        int k = MatTrans.size();
                                        temp4.add(det.get(0));
                                        for (int l1 = 0; l1 < MatTrans.size(); l1++) {
                                                for (int n = 1; n < MatTrans.get(l1).size(); n++) {

                                                        temp = MatTrans.get(l1).get(n);
                                                        if (temp4.contains(temp) == false) {
                                                                temp4.add(temp);

                                                                temp1.removeAll(temp1);

                                                                temp1.add(temp);

                                                                for (i = 0; i < alphabet.length(); i++) {

                                                                        temp1.add(a.transition_list(alphabet.charAt(i), temp));

                                                                }
                                                                ArrayList<ArrayList<Integer>> temp5 = (ArrayList<ArrayList<Integer>>) temp1.clone();
                                                                MatTrans.add(temp5);

                                                        }
                                                }
                                        }
                                        /* tableau de epsilone fermeture */
                                        
                                        ArrayList<Character> vecteuralphabet =new ArrayList<Character>();
                                        ArrayList<ArrayList<Integer>> vecteurtrans =new ArrayList<ArrayList<Integer>>();
                                        Character c;
                                        
                                        for (i = 0,c='A'; i < MatTrans.size(); i++,c++) {
                                                vecteuralphabet.add(c);
                                                vecteurtrans.add(MatTrans.get(i).get(0));
                                                for (j = 1; j < MatTrans.get(i).size(); j++){
                                                        MatTrans.get(i).get(0).toString() ;
                                                                        
                                                }
                                                                        
                                        }
                                        
                                        ArrayList<ArrayList<Integer>> vecteurAccept = new ArrayList<ArrayList<Integer>>();
                                        for (int i2 = 0; i2 < tabAccept.size(); i2++) {
                                                for (int i1 = 0; i1 < temp4.size(); i1++) {

                                                        if (temp4.get(i1).contains(tabAccept.get(i2)) && vecteurAccept.contains(temp4.get(i1)) == false) {
                                                                vecteurAccept.add(temp4.get(i1));
                                                        }
                                                }
                                        }
                                        ArrayList<ArrayList<Character>> inout = new ArrayList<ArrayList<Character>>();
                                        inout = a.inout(vecteurAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        ArrayList<ArrayList<Integer>> vecteurNonAccept = (ArrayList<ArrayList<Integer>>) temp4.clone();

                                        for (j = 0; j < vecteurAccept.size(); j++) {
                                                for (i = 0; i < vecteurNonAccept.size(); i++) {
                                                        if (vecteurNonAccept.get(i).equals(vecteurAccept.get(j)))
                                                                vecteurNonAccept.remove(vecteurNonAccept.get(i));
                                                }
                                        }

                                        ArrayList<ArrayList<ArrayList<Integer>>> groupe = new ArrayList<ArrayList<ArrayList<Integer>>>();
                                        ArrayList<ArrayList<Integer>> vecteurAccept1 = (ArrayList<ArrayList<Integer>>) vecteurAccept.clone();

                                        a.decomposition(groupe, vecteurAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        ArrayList<ArrayList<Character>> inout1 = new ArrayList<ArrayList<Character>>();

                                        
                                        inout1 = a.inout(vecteurNonAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        a.decomposition(groupe, vecteurNonAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        test = false;
                                        i = 0;
                                        int resu=0;
                                        int init=0;
                                        for(i=0;i<groupe.size();i++)
                                        for(j=0;j<groupe.get(i).size();j++)
                                        for(k=0;k<groupe.get(i).get(j).size();k++)
                                        if(groupe.get(i).get(j).get(k)==a.initial.id)init=i;

                                        for (i = 0; i < groupe.size(); i++) {
                                                ArrayList<ArrayList<Integer>> vectrans = (ArrayList<ArrayList<Integer>>) a.SearchTrans(MatTrans, groupe.get(i).get(0)).clone();
                                                for (j = 1; j < vectrans.size(); j++)
                                                     a.SearchGroupe(groupe, vectrans.get(j)) ;
                                        }
                                        ArrayList<Integer> accept =new ArrayList<Integer>();
                                        
                                        for (i = 0; i < groupe.size(); i++) {
                                                j = 0;
                                                test = false;
                                                while (test == false && j < vecteurAccept1.size()) {
                                                        if (groupe.get(i).contains(vecteurAccept1.get(j))) {
                                                                accept.add(i);
                                                                test = true;
                                                        }
                                                        j++;
                                                }
                        
                }
                this.s1=a.dessine_optimal(accept, groupe, MatTrans, alphabet,init);
                a.dessine_deteministe(vecteurAccept1,MatTrans,alphabet,vecteuralphabet,vecteurtrans);
                this.MatTrans1=MatTrans;
                this.groupe1=groupe;
                this.accept1=accept;
        }                                        
        }
        private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
     try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","deterministe.dot");
                     builder.redirectOutput(new File("deterministe.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "deterministe.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }        // TODO add your handling code here:
        }                                        

        private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
             ArrayList<Character> a=new ArrayList<>();
             for(int i=0;i<jTextField3.getText().length();i++)
             {
                     if(jTextField3.getText().charAt(i)<'a'||jTextField3.getText().charAt(i)>'z')
                             JOptionPane.showMessageDialog(this,"erreur des entrées");
                    else a.add(jTextField3.getText().charAt(i));
             
             }
                interfaceExpreg.k++;
             if(jTextField5.getText().isEmpty()||jTextField7.getText().isEmpty()||jTextField6.getText().isEmpty()||jTextField6.getText().charAt(0)<'a'||jTextField6.getText().charAt(0)>'z'||a.contains(jTextField6.getText().charAt(0))==false) {
                
                     JOptionPane.showMessageDialog(this,"erreur des entrées");
                }
                if(interfaceExpreg.k==1){
                     
                String ch=jTextField6.getText();
                b=Automaton.debut(b,Integer.parseInt(jTextField5.getText()),ch.charAt(0),Integer.parseInt(jTextField7.getText()));
                 if(jRadioButton2.isSelected())
                 {
                         for (State f: b.states)
                         if(f.id==Integer.parseInt(jTextField7.getText()))b.accept.add(f);
                 
                 }
                 if(jRadioButton1.isSelected())
                 {
                         for (State f: b.states)
                         if(f.id==Integer.parseInt(jTextField5.getText()))b.accept.add(f);
                 
                 }
                }
                String ch=jTextField6.getText();    
                State l=new State(Integer.parseInt(jTextField7.getText()));
                b.states.add(l);
                for (State f: b.states)	   
                {if(f.id==Integer.parseInt(jTextField5.getText()))f.addTransition(ch.charAt(0),l);
                }
                if(jRadioButton2.isSelected())
                 {
                         for (State f: b.states)
                         if(f.id==Integer.parseInt(jTextField7.getText()))b.accept.add(f);
                 
                 }
                 if(jRadioButton1.isSelected())
                 {
                         for (State f: b.states)
                         if(f.id==Integer.parseInt(jTextField5.getText()))b.accept.add(f);
                 
                 }
                 jTextField2.setText("etat ajouter avec succes");
                

        }                                        

        private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                
                
                
                b.dessine2(null,b.initial.id,null);
                Automaton a=b;
                 int i = 0, j = 0;
                
                                        JOptionPane.showMessageDialog(this,"les Graphes du dexiéme Automate son dessinés avec succes");
                                        String alphabet =jTextField3.getText();
                                     boolean test;
                                        
                                
                                        ArrayList<Integer> tabAccept = new ArrayList<Integer>();
                                        tabAccept = a.dump(null, a.initial.id, null);
                                        a.dessine(null, a.initial.id, null);

                                        ArrayList<ArrayList<Integer>> det = new ArrayList<ArrayList<Integer>>();

                                        ArrayList<Integer> temp = new ArrayList<Integer>();
                                        temp = a.firstlist();
                                     

                                        det.add(temp);

                                        for (i = 0; i < alphabet.length(); i++) {
                                                det.add(a.transition_list(alphabet.charAt(i), temp));

                                        }
                                        ArrayList<ArrayList<Integer>> temp1 = new ArrayList<ArrayList<Integer>>();
                                        ArrayList<ArrayList<Integer>> temp4 = new ArrayList<ArrayList<Integer>>();
                                        ArrayList<ArrayList<ArrayList<Integer>>> MatTrans = new ArrayList<ArrayList<ArrayList<Integer>>>();
                                        MatTrans.add(det);

                                        int k = MatTrans.size();
                                        temp4.add(det.get(0));
                                        for (int l1 = 0; l1 < MatTrans.size(); l1++) {
                                                for (int n = 1; n < MatTrans.get(l1).size(); n++) {

                                                        temp = MatTrans.get(l1).get(n);
                                                        if (temp4.contains(temp) == false) {
                                                                temp4.add(temp);

                                                                temp1.removeAll(temp1);

                                                                temp1.add(temp);

                                                                for (i = 0; i < alphabet.length(); i++) {

                                                                        temp1.add(a.transition_list(alphabet.charAt(i), temp));

                                                                }
                                                                ArrayList<ArrayList<Integer>> temp5 = (ArrayList<ArrayList<Integer>>) temp1.clone();
                                                                MatTrans.add(temp5);

                                                        }
                                                }
                                        }
                                        /* tableau de epsilone fermeture */
                                        
                                        ArrayList<Character> vecteuralphabet =new ArrayList<Character>();
                                        ArrayList<ArrayList<Integer>> vecteurtrans =new ArrayList<ArrayList<Integer>>();
                                        Character c;
                                        
                                        for (i = 0,c='A'; i < MatTrans.size(); i++,c++) {
                                                vecteuralphabet.add(c);
                                                vecteurtrans.add(MatTrans.get(i).get(0));
                                                for (j = 1; j < MatTrans.get(i).size(); j++){
                                                        MatTrans.get(i).get(0).toString() ;
                                                                        
                                                }
                                                                        
                                        }
                                        
                                        ArrayList<ArrayList<Integer>> vecteurAccept = new ArrayList<ArrayList<Integer>>();
                                        for (int i2 = 0; i2 < tabAccept.size(); i2++) {
                                                for (int i1 = 0; i1 < temp4.size(); i1++) {

                                                        if (temp4.get(i1).contains(tabAccept.get(i2)) && vecteurAccept.contains(temp4.get(i1)) == false) {
                                                                vecteurAccept.add(temp4.get(i1));
                                                        }
                                                }
                                        }
                                        ArrayList<ArrayList<Character>> inout = new ArrayList<ArrayList<Character>>();
                                        inout = a.inout(vecteurAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        ArrayList<ArrayList<Integer>> vecteurNonAccept = (ArrayList<ArrayList<Integer>>) temp4.clone();

                                        for (j = 0; j < vecteurAccept.size(); j++) {
                                                for (i = 0; i < vecteurNonAccept.size(); i++) {
                                                        if (vecteurNonAccept.get(i).equals(vecteurAccept.get(j)))
                                                                vecteurNonAccept.remove(vecteurNonAccept.get(i));
                                                }
                                        }

                                        ArrayList<ArrayList<ArrayList<Integer>>> groupe = new ArrayList<ArrayList<ArrayList<Integer>>>();
                                        ArrayList<ArrayList<Integer>> vecteurAccept1 = (ArrayList<ArrayList<Integer>>) vecteurAccept.clone();

                                        a.decomposition(groupe, vecteurAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        ArrayList<ArrayList<Character>> inout1 = new ArrayList<ArrayList<Character>>();

                                        
                                        inout1 = a.inout(vecteurNonAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        a.decomposition(groupe, vecteurNonAccept, MatTrans,vecteuralphabet,vecteurtrans);
                                        test = false;
                                        i = 0;
                                        int resu=0;
                                        int init=0;
                                        for(i=0;i<groupe.size();i++)
                                        for(j=0;j<groupe.get(i).size();j++)
                                        for(k=0;k<groupe.get(i).get(j).size();k++)
                                        if(groupe.get(i).get(j).get(k)==a.initial.id)init=i;

                                        for (i = 0; i < groupe.size(); i++) {
                                                ArrayList<ArrayList<Integer>> vectrans = (ArrayList<ArrayList<Integer>>) a.SearchTrans(MatTrans, groupe.get(i).get(0)).clone();
                                                for (j = 1; j < vectrans.size(); j++)
                                                     a.SearchGroupe(groupe, vectrans.get(j)) ;
                                        }
                                        ArrayList<Integer> accept =new ArrayList<Integer>();
                                        
                                        for (i = 0; i < groupe.size(); i++) {
                                                j = 0;
                                                test = false;
                                                while (test == false && j < vecteurAccept1.size()) {
                                                        if (groupe.get(i).contains(vecteurAccept1.get(j))) {
                                                                accept.add(i);
                                                                test = true;
                                                        }
                                                        j++;
                                                }
                        
                }
                this.s2=a.dessine_optimal2(accept, groupe, MatTrans, alphabet,init);
                a.dessine_deteministe2(vecteurAccept1,MatTrans,alphabet,vecteuralphabet,vecteurtrans);
                this.alphabet2=alphabet;
                this.MatTrans2=MatTrans;
                this.groupe2=groupe;
                this.accept2=accept;
               this.test=a.testegalite(this.groupe1,this.groupe2,this.MatTrans1,this.MatTrans2,this.alphabet1,this.alphabet2,this.accept1,this.accept2);
                
                
        }                                        

        private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
                // TODO add your handling code here:
        }                                             

        private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                              
                // TODO add your handling code here:
        }                                             

        private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","deterministe2.dot");
                     builder.redirectOutput(new File("deterministe2.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "deterministe2.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }       
        }                                        

        private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","optimal2.dot");
                     builder.redirectOutput(new File("optimal2.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "optimal2.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }
        }                                        

        private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {                                         
             try {
                        ProcessBuilder builder = new ProcessBuilder("dot", "-Tpng","graphe.dot");
                     builder.redirectOutput(new File("graphe.png"));
                
                     Process p = builder.start();
                 ProcessBuilder builder2 = new ProcessBuilder("display", "graphe.png");
                        
                     Process p2 = builder2.start();
             

                } catch (Exception e) {
                        System.out.print(e.toString());
                }
        }  
        private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {                                         
                if(this.s1.equals(this.s2))   JOptionPane.showMessageDialog(this,"egaux"); 
                else {
                        JOptionPane.showMessageDialog(this,"ne sont pas egaux");
                }
                }                                      

        private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
                // TODO add your handling code here:
        }                                           

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(interfaceExpreg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(interfaceExpreg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(interfaceExpreg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(interfaceExpreg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                //</editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new interfaceExpreg().setVisible(true);
                        }
                });
        }

        // Variables declaration - do not modify                     
        private javax.swing.JButton jButton1;
        private javax.swing.JButton jButton2;
        private javax.swing.JButton jButton3;
        private javax.swing.JButton jButton4;
        private javax.swing.JButton jButton5;
        private javax.swing.JButton jButton6;
        private javax.swing.JButton jButton7;
        private javax.swing.JButton jButton8;
        private javax.swing.JButton jButton9;
        private javax.swing.JButton jButton10;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JLabel jLabel12;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JRadioButton jRadioButton1;
        private javax.swing.JRadioButton jRadioButton2;
        private javax.swing.JTextField jTextField1;
        private javax.swing.JTextField jTextField2;
        private javax.swing.JTextField jTextField3;
        private javax.swing.JTextField jTextField4;
        private javax.swing.JTextField jTextField5;
        private javax.swing.JTextField jTextField6;
        private javax.swing.JTextField jTextField7;
        // End of variables declaration                   
}
